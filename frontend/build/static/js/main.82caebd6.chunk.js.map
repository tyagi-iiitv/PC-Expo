{"version":3,"sources":["components/pcp/pcp.jsx","components/scatterplot/scatterplot.jsx","App.js","reportWebVitals.js","index.js","components/pcp/pcp.module.scss","app.module.scss"],"names":["generateSVG","width","boxHeight","corr","variance","skew","neigh","split","fan","callbackFromParent","data_rec","corr_rec","corr_rec_neg","var_rec","var_rec_neg","skew_rec","skew_rec_neg","convergence","para","indices","line","brushstart","brushend","brush","brushDist","a","actives","svg","selectAll","filter","d","d3","this","each","key","push","dimension","extent","length","lines","style","every","brushObj","y","fetch","method","headers","body","JSON","stringify","invert","then","response","json","data","dragdata","sourceEvent","stopPropagation","dimensions","map","x","remove","height","domain","range","dists","xd","x_dist","x_para_offset","yd","append","attr","styles","background","enter","datum","curve","i","g","g_dist","axis","call","scale","text","on","node","GeneratePCP","props","state","canvasDims","correlation_pos","correlation_neg","variance_pos","variance_neg","skewness_pos","skewness_neg","methods","setState","var","prevProps","equal","pcpdata","id","className","svgComp","React","Component","ScatterplotPlotly","console","log","mode","type","marker","color","size","App","sliderdata","handleChange","bind","sliderChange","callbackFromChild","evt","cur_state","target","val","Navbar","bg","variant","NavbarBrand","fontSize","padding","marginLeft","Container","fluid","Row","mainRow","Col","md","src","alt","slider","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","onChangeCommitted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.82caebd6.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './pcp.module.scss';\r\nimport * as d3 from 'd3';\r\nimport equal from 'fast-deep-equal';\r\n\r\nclass GeneratePCP extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            canvasDims: { width: 1400, height: 500 },\r\n            data_rec: {},\r\n            correlation_pos: [],\r\n            correlation_neg: [], \r\n            variance_pos: [],\r\n            variance_neg: [],\r\n            skewness_pos: [],\r\n            skewness_neg: [],\r\n            convergence: [],\r\n            para: [],\r\n            indices: [],\r\n\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch('/getjsondata', {\r\n            methods: 'GET',\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({data_rec: response}, ()=> \r\n                generateSVG(\r\n                    this.state.canvasDims.width, \r\n                    this.state.canvasDims.height,\r\n                    this.props.corr, \r\n                    this.props.var, \r\n                    this.props.skew, \r\n                    this.props.neigh, \r\n                    this.props.split, \r\n                    this.props.fan,\r\n                    this.props.callbackFromParent,\r\n                    this.state.data_rec,\r\n                    this.state.correlation_pos,\r\n                    this.state.correlation_neg, \r\n                    this.state.variance_pos,\r\n                    this.state.variance_neg, \r\n                    this.state.skewness_pos,\r\n                    this.state.skewness_neg,\r\n                    this.state.convergence,\r\n                    this.state.para,\r\n                    this.state.indices\r\n                )\r\n            )\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(!equal(this.props, prevProps)){\r\n            generateSVG(\r\n                        this.state.canvasDims.width, \r\n                        this.state.canvasDims.height,\r\n                        this.props.corr, \r\n                        this.props.var, \r\n                        this.props.skew, \r\n                        this.props.neigh, \r\n                        this.props.split, \r\n                        this.props.fan,\r\n                        this.props.callbackFromParent,\r\n                        this.state.data_rec, \r\n                        this.props.pcpdata[0],\r\n                        this.props.pcpdata[1], \r\n                        this.props.pcpdata[2],\r\n                        this.props.pcpdata[3],\r\n                        this.props.pcpdata[4],\r\n                        this.props.pcpdata[5], \r\n                        this.props.pcpdata[6],\r\n                        this.props.pcpdata[7],\r\n                        this.props.pcpdata[8],\r\n                    )\r\n            }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <svg\r\n                id=\"svg1\"\r\n                className={styles.svgComp}\r\n                height={this.state.canvasDims.height}\r\n                width={this.state.canvasDims.width}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nasync function generateSVG(width, \r\n    boxHeight, \r\n    corr, \r\n    variance, \r\n    skew, \r\n    neigh, \r\n    split, \r\n    fan, \r\n    callbackFromParent, \r\n    data_rec, \r\n    corr_rec, corr_rec_neg, \r\n    var_rec, var_rec_neg, \r\n    skew_rec, skew_rec_neg,\r\n    convergence, \r\n    para,\r\n    indices){\r\n    d3.selectAll(\"#svg1 > *\").remove();\r\n    let svg = d3.select('#svg1');\r\n    let y = {};\r\n    let x, dimensions, lines, g, background, corrlines, varlines, skewlines, neighlines, splitlines, fanlines;\r\n    let height = boxHeight - 20;\r\n    let data = data_rec\r\n    dimensions = d3.keys(data[0]).filter(function (key) {\r\n        if (key !== \"\") {\r\n            y[key] = d3.scaleLinear()\r\n                .domain(d3.extent(data, function (d) { return +d[key]; }))\r\n                .range([height-30, 0]);\r\n            return key;\r\n        };\r\n    });\r\n    let x_para_offset = 1000\r\n    let dists = ['corr_pos', 'corr_neg', 'var_pos', 'var_neg', 'skew_pos', 'skew_neg', 'fan', 'neighborhood']\r\n    let offset = 100\r\n    // Create our x axis scale.\r\n    x = d3.scalePoint()\r\n    .domain(dimensions)\r\n    .range([x_para_offset, width-50]);\r\n\r\n    let xd = d3.scaleLinear()\r\n    .domain([-1, 1])\r\n    .range([0, 25]);\r\n\r\n    let x_dist = d3.scalePoint()\r\n    .domain(dists)\r\n    .range([40, x_para_offset-offset])\r\n\r\n\r\n    let yd = y['bill_length_mm']\r\n\r\n    // Add grey background lines for context.\r\n    background = svg.append(\"g\")\r\n        .attr(\"class\", styles.background)\r\n        .selectAll(\"path\")\r\n        .data(data)\r\n        .enter().append(\"path\")\r\n        .attr(\"d\", line);\r\n\r\n    lines = svg.append(\"g\")\r\n        .attr(\"class\", styles.lines)\r\n        .selectAll(\"path\")\r\n        .data(data).enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", line);\r\n\r\n        \r\n    // var kde = kernelDensityEstimator(kernelEpanechnikov(7),yd.ticks(10))\r\n    // var density =  kde( corr_demo.map(function(d){  return d; }) )  \r\n\r\n    svg.append(\"path\")\r\n      .attr(\"class\", \"mypath\")\r\n      .datum(corr_rec)\r\n      .attr(\"fill\", \"#e41a1c\")\r\n      .attr(\"opacity\", \".8\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"d\",  d3.line()\r\n        .curve(d3.curveBasis)\r\n          .x(function(d) { return x_dist('corr_pos')+xd(d);})\r\n          .y(function(d,i) { return y['bill_length_mm'](indices[i]); })\r\n      )\r\n      \r\n\r\n    svg.append(\"path\")\r\n      .attr(\"class\", \"mypath\")\r\n      .datum(corr_rec_neg)\r\n      .attr(\"fill\", \"#e41a1c\")\r\n      .attr(\"opacity\", \".8\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"d\",  d3.line()\r\n        .curve(d3.curveBasis)\r\n          .x(function(d) { return x_dist('corr_neg')+xd(d);})\r\n          .y(function(d,i) { return y['bill_length_mm'](indices[i]); })\r\n      );\r\n\r\n      svg.append(\"path\")\r\n      .attr(\"class\", \"mypath\")\r\n      .datum(var_rec)\r\n      .attr(\"fill\", \"#377eb8\")\r\n      .attr(\"opacity\", \".8\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"d\",  d3.line()\r\n        .curve(d3.curveBasis)\r\n          .x(function(d) { return x_dist('var_pos')+xd(d);})\r\n          .y(function(d,i) { return y['bill_length_mm'](indices[i]); })\r\n      );\r\n\r\n      svg.append(\"path\")\r\n      .attr(\"class\", \"mypath\")\r\n      .datum(var_rec_neg)\r\n      .attr(\"fill\", \"#377eb8\")\r\n      .attr(\"opacity\", \".8\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"d\",  d3.line()\r\n        .curve(d3.curveBasis)\r\n          .x(function(d) { return x_dist('var_neg')+xd(d);})\r\n          .y(function(d,i) { return y['bill_length_mm'](indices[i]); })\r\n      );\r\n\r\n      svg.append(\"path\")\r\n      .attr(\"class\", \"mypath\")\r\n      .datum(skew_rec)\r\n      .attr(\"fill\", \"#4daf4a\")\r\n      .attr(\"opacity\", \".8\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"d\",  d3.line()\r\n        .curve(d3.curveBasis)\r\n          .x(function(d) { return x_dist('skew_pos')+xd(d);})\r\n          .y(function(d,i) { return y['bill_length_mm'](indices[i]); })\r\n      );\r\n\r\n      svg.append(\"path\")\r\n      .attr(\"class\", \"mypath\")\r\n      .datum(skew_rec_neg)\r\n      .attr(\"fill\", \"#4daf4a\")\r\n      .attr(\"opacity\", \".8\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"d\",  d3.line()\r\n        .curve(d3.curveBasis)\r\n          .x(function(d) { return x_dist('skew_neg')+xd(d);})\r\n          .y(function(d,i) { return y['bill_length_mm'](indices[i]); })\r\n      );\r\n\r\n      svg.append(\"path\")\r\n      .attr(\"class\", \"mypath\")\r\n      .datum(convergence)\r\n      .attr(\"fill\", \"#984ea3\")\r\n      .attr(\"opacity\", \".8\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"d\",  d3.line()\r\n        .curve(d3.curveBasis)\r\n          .x(function(d) { return x_dist('fan')+xd(d);})\r\n          .y(function(d,i) { return y['bill_length_mm'](indices[i]); })\r\n      );\r\n\r\n      svg.append(\"path\")\r\n      .attr(\"class\", \"mypath\")\r\n      .datum(para)\r\n      .attr(\"fill\", \"#ff7f00\")\r\n      .attr(\"opacity\", \".8\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"d\",  d3.line()\r\n        .curve(d3.curveBasis)\r\n          .x(function(d) { return x_dist('neighborhood')+xd(d);})\r\n          .y(function(d,i) { return y['bill_length_mm'](indices[i]); })\r\n      );\r\n\r\n\r\n    //   x(key), y[key](d[key]\r\n    // Add a group element for each dimension and dist\r\n    g = svg.selectAll(\".dimension\")\r\n        .data(dimensions).enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"dimension\")\r\n        .attr(\"transform\", function (d) { return \"translate(\" + x(d) + \")\"; });\r\n    \r\n    let g_dist = svg.selectAll(\".dists\")\r\n        .data(dists).enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"dists\")\r\n        .attr(\"transform\", function (d) { return \"translate(\" + x_dist(d) + \")\"; });\r\n    \r\n    // // Add axis labels and title.\r\n    g.append(\"g\")\r\n        .attr(\"class\", styles.axis)\r\n        .each(function (d) {d3.select(this).call(d3.axisLeft().scale(y[d])); })\r\n        .append(\"text\")\r\n        .style(\"text-anchor\", \"middle\")\r\n        .attr(\"fill\", \"black\")\r\n        .attr(\"font-size\", \"12\")\r\n        .attr(\"y\", height-5)\r\n        .text(function (d) { return d; });\r\n\r\n    g_dist.append(\"g\")\r\n        .attr(\"class\", styles.axis)\r\n        .each(function (d) { d3.select(this).call(d3.axisLeft().scale(yd)); })\r\n        .append(\"text\")\r\n        .style(\"text-anchor\", \"middle\")\r\n        .attr(\"fill\", \"black\")\r\n        .attr(\"font-size\", \"12\")\r\n        .attr(\"y\", height-5)\r\n        .text(function (d) { return d; });\r\n\r\n    // Add and store a brush for each axis.\r\n    g.append(\"g\")\r\n        .attr(\"class\", \"brush\")\r\n        .call(d3.brushY()\r\n            .extent([[-10, 0], [10, height]])\r\n            .on(\"start\", brushstart)\r\n            .on(\"brush\", brush)\r\n            .on(\"end\", brushend))\r\n        .selectAll(\"rect\")\r\n        .attr(\"x\", -8)\r\n        .attr(\"width\", 16);\r\n\r\n    g_dist.append(\"g\")\r\n        .attr(\"class\", \"brushdist\")\r\n        .call(d3.brushY()\r\n            .extent([[-10, 0], [10, height]])\r\n            .on(\"start\", brushstart)\r\n            .on(\"brush\", brushDist)\r\n            .on(\"end\", brushend))\r\n        .selectAll(\"rect\")\r\n        .attr(\"x\", -8)\r\n        .attr(\"width\", 16);\r\n    \r\n    function line(d) {\r\n        return d3.line()(dimensions.map(function (key) {\r\n            // console.log(key, x(key), y[key](d[key]));\r\n            return [x(key), y[key](d[key])];\r\n        }));\r\n    }\r\n    \r\n    function brushstart() {\r\n        d3.event.sourceEvent.stopPropagation();\r\n    }\r\n    \r\n    function brushend(){\r\n        if(!d3.brushSelection(this)){\r\n            lines.style(\"display\", null);\r\n            return\r\n        }\r\n\r\n        fetch('/getpoints', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify([y['bill_length_mm'].invert(d3.brushSelection(this)[0]), y['bill_length_mm'].invert(d3.brushSelection(this)[1])])\r\n            // console.log(y['bill_length_mm'].invert(940))\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            callbackFromParent({dragdata: data})\r\n        })\r\n    }\r\n    // Handles a brush event, toggling the display of foreground lines.\r\n    function brush() {\r\n        // Get a set of dimensions with active brushes and their current extent.\r\n        var actives = [];\r\n        svg.selectAll(\".brush\")\r\n            .filter(function (d) {\r\n                return d3.brushSelection(this);\r\n            })\r\n            .each(function (key) {\r\n                actives.push({\r\n                    dimension: key,\r\n                    extent: d3.brushSelection(this)\r\n                });\r\n            });\r\n        // Change line visibility based on brush extent.\r\n        if (actives.length === 0) {\r\n            lines.style(\"display\", null);\r\n        } else {\r\n            lines.style(\"display\", function (d) {\r\n                return actives.every(function (brushObj) {\r\n                    return brushObj.extent[0] <= y[brushObj.dimension](d[brushObj.dimension]) && y[brushObj.dimension](d[brushObj.dimension]) <= brushObj.extent[1];\r\n                }) ? null : \"none\";\r\n            });\r\n        }\r\n    }\r\n    \r\n    function brushDist() {\r\n        // Get a set of dimensions with active brushes and their current extent.\r\n        var actives = [];\r\n        svg.selectAll(\".brushdist\")\r\n            .filter(function (d) {\r\n                return d3.brushSelection(this);\r\n            })\r\n            .each(function (key) {\r\n                actives.push({\r\n                    dimension: 'bill_length_mm',\r\n                    extent: d3.brushSelection(this)\r\n                });\r\n            });\r\n        // Change line visibility based on brush extent.\r\n        if (actives.length === 0) {\r\n            lines.style(\"display\", null);\r\n        } else {\r\n            lines.style(\"display\", function (d) {\r\n                return actives.every(function (brushObj) {\r\n                    return brushObj.extent[0] <= y[brushObj.dimension](d[brushObj.dimension]) && y[brushObj.dimension](d[brushObj.dimension]) <= brushObj.extent[1];\r\n                }) ? null : \"none\";\r\n            });\r\n        }\r\n    }\r\n\r\n    return svg.node();\r\n}\r\n\r\nexport default GeneratePCP;","import React, {Component} from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nexport default class ScatterplotPlotly extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/readdata', {\r\n            methods: 'GET',\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n            this.setState({data: response})\r\n        })\r\n    }\r\n    //To display the scatterplot\r\n    render() {\r\n        console.log(this.state.data, this.props.dragdata)\r\n        // if(this.props.emb.length === 0){\r\n        //     return <div/>\r\n        // }\r\n        return (\r\n            <div>\r\n                <Plot\r\n                data={[\r\n                    {   \r\n                        //Creates the original scatterplot based on the embeddings\r\n                        x: this.state.data[0],\r\n                        y: this.state.data[1],\r\n                        mode: 'markers',\r\n                        type: 'scatter',\r\n                        marker: {color: '#F08080', size: 7},\r\n                    },\r\n                    {\r\n                        x: this.props.dragdata[0],\r\n                        y: this.props.dragdata[1],\r\n                        mode: 'markers',\r\n                        type: 'scatter',\r\n                        marker: {color: '#3182bd', size: 13},\r\n                    }\r\n                ]}\r\n                style={{width: 500, height: 500}}\r\n                />\r\n            </div>\r\n\r\n        );\r\n        \r\n    }\r\n}","import './App.css';\r\nimport { Navbar, NavbarBrand, Container, Row, Col, Form } from 'react-bootstrap';\r\nimport {GeneratePCP} from './components';\r\nimport { ScatterplotPlotly } from './components';\r\nimport { Component } from 'react';\r\nimport styles from './app.module.scss';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nexport default class App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      pcpdata: {},\r\n      dragdata: {},\r\n      sliderdata: {},\r\n      corr: false,\r\n      var: false,\r\n      skew: false,\r\n      neigh: false, \r\n      split: false, \r\n      fan: false\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.sliderChange = this.sliderChange.bind(this);\r\n    this.callbackFromChild = this.callbackFromChild.bind(this);\r\n  }\r\n\r\n  // componentDidMount(){\r\n  //   fetch('/readData', {\r\n  //     methods: 'GET',\r\n  //   })\r\n  //   .then(response => response.json())\r\n  //   .then(response => {\r\n  //     this.setState({data: response})\r\n  //   })\r\n  // }\r\n\r\n  callbackFromChild(data){\r\n    this.setState({'data_rec': false});\r\n    this.setState(data, ()=> this.setState({'data_rec': true}));\r\n  }\r\n\r\n  handleChange(evt){\r\n    let cur_state = this.state;\r\n    cur_state[evt.target.id] = !cur_state[evt.target.id]\r\n    this.setState(cur_state, ()=> console.log(this.state));\r\n  }\r\n\r\n  sliderChange(evt, val){\r\n    fetch('/getsliderdata', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(val)\r\n      // console.log(y['bill_length_mm'].invert(940))\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n      this.setState({sliderdata: data}, ()=> console.log(this.state))\r\n  })\r\n  }\r\n\r\n  render(){\r\n    // console.log(this.state.data)\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <NavbarBrand style={{fontSize: 30, padding: '5 0', marginLeft: 15}}>\r\n            ParaCoords Explorer\r\n          </NavbarBrand>\r\n        </Navbar>\r\n        <Container fluid>\r\n          <Row className={styles.mainRow}>\r\n            <Col md={9}>\r\n              <img src=\"/all_props.png\" alt=\"image\"/>\r\n            </Col>\r\n            <Col md={3} className={styles.slider}>\r\n              <Slider\r\n                  aria-label=\"Temperature\"\r\n                  defaultValue={30}\r\n                  // getAriaValueText={valuetext}\r\n                  valueLabelDisplay=\"auto\"\r\n                  step={10}\r\n                  marks\r\n                  min={10}\r\n                  max={100}\r\n                  onChangeCommitted={this.sliderChange}\r\n                />\r\n              <p>Window Size</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Container fluid>\r\n          <Row className={styles.mainRow}>\r\n            <Col md={9}>\r\n              <GeneratePCP pcpdata={this.state.sliderdata} data={this.state.data} corr={this.state.corr} var={this.state.var} skew={this.state.skew} neigh={this.state.neigh} split={this.state.split} fan={this.state.fan} callbackFromParent={this.callbackFromChild}/>\r\n            </Col>\r\n            <Col md={3}>\r\n              <ScatterplotPlotly data={this.state.data} dragdata={this.state.dragdata}/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgComp\":\"pcp_svgComp__SHIFm\",\"lines\":\"pcp_lines__2VtkC\",\"background\":\"pcp_background__FPOGh\",\"correlation\":\"pcp_correlation__1GFmA\",\"variance\":\"pcp_variance__2QC3m\",\"skewness\":\"pcp_skewness__3550a\",\"neigh\":\"pcp_neigh__17_Ru\",\"split\":\"pcp_split__3ogBi\",\"fan\":\"pcp_fan__2SXH9\",\"axis\":\"pcp_axis__1k4LP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainRow\":\"app_mainRow__226D6\",\"slider\":\"app_slider__3i5qh\"};"],"sourceRoot":""}